// Media query mixins
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}. Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid mixins
@mixin grid($columns: 1, $gap: $spacing-unit) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Typography mixins
@mixin heading($size, $weight: bold, $line-height: 1.2) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
}

// Transitions
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timing;
}

// Glass effect
@mixin glass($bg-opacity: 0.05, $border-opacity: 0.1, $blur: 10px) {
  background: rgba(255, 255, 255, $bg-opacity);
  backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, $border-opacity);
}

@mixin glass-dark($bg-opacity: 0.2, $border-opacity: 0.05, $blur: 10px) {
  background: rgba(0, 0, 0, $bg-opacity);
  backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, $border-opacity);
}

